<Window x:Class="AdvertisementWpf.RequestWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"        
        xmlns:local="clr-namespace:AdvertisementWpf" 
        mc:Ignorable="d"
        WindowState="Maximized" MinHeight="700" MinWidth="1400"
        ResizeMode="CanResizeWithGrip" WindowStyle="SingleBorderWindow">
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Title" Value="Заказ"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DateDateAdmission, Path=IsEnabled}" Value="True">
                    <Setter Property="Title" Value="Заказ (новый)"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=SaveRequestButton, Path=IsVisible}" Value="False">
                    <Setter Property="Title" Value="Заказ (просмотр)"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <ControlTemplate x:Key="SpecialTreeViewItemTemplate" TargetType="TreeViewItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="19" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton IsChecked="False" ClickMode="Press" Name="Expander">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="UIElement.Focusable">
                                <Setter.Value>
                                    <System:Boolean>False</System:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <System:Double>16</System:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <System:Double>16</System:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                <Path.Data>
                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsChecked">
                                                <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF595959</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF262626</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="UIElement.IsMouseOver">
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <System:Boolean>True</System:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="UIElement.IsMouseOver">
                                                        <Condition.Value>
                                                            <System:Boolean>True</System:Boolean>
                                                        </Condition.Value>
                                                    </Condition>
                                                    <Condition Property="ToggleButton.IsChecked">
                                                        <Condition.Value>
                                                            <System:Boolean>True</System:Boolean>
                                                        </Condition.Value>
                                                    </Condition>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF262626</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF595959</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
                    <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
                <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TreeViewItem.IsExpanded">
                    <Setter Property="UIElement.Visibility" TargetName="ItemsHost">
                        <Setter.Value>
                            <x:Static Member="Visibility.Collapsed" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <System:Boolean>False</System:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems">
                    <Setter Property="UIElement.Visibility" TargetName="Expander">
                        <Setter.Value>
                            <x:Static Member="Visibility.Hidden" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <System:Boolean>False</System:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="TreeViewItem.IsSelected">
                    <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <System:Boolean>True</System:Boolean>
                    </Trigger.Value>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="TreeViewItem.IsSelected">
                            <Condition.Value>
                                <System:Boolean>True</System:Boolean>
                            </Condition.Value>
                        </Condition>
                        <Condition Property="Selector.IsSelectionActive">
                            <Condition.Value>
                                <System:Boolean>False</System:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiTrigger.Conditions>
                    <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <Trigger Property="UIElement.IsEnabled">
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <System:Boolean>False</System:Boolean>
                    </Trigger.Value>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TreeViewItem" x:Key="SpecialTreeViewItem">
            <Setter Property="Template" Value="{DynamicResource SpecialTreeViewItemTemplate}"/>
        </Style>
        <local:CostConverter x:Key="CostConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:ValueConverterGroup x:Key="BoolToVisibilityConverter">
            <local:BoolNotBoolConverter/>
            <BooleanToVisibilityConverter/>
        </local:ValueConverterGroup>
        <local:IsCanEditAfterSendToProdToBoolConverter x:Key="IsCanEditAfterSendToProdToBoolConverter"/>
        <local:NullDateTimeToBoolConverter x:Key="NullDateTimeToBoolConverter"/>
        <local:SumListViewDecimalConverter x:Key="SumListViewDecimalConverter"/>
        <local:MultiValueConverter x:Key="MultiValueConverter"/>
        <Style x:Key="DropShadow" TargetType="{x:Type FrameworkElement}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="0.5" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonOfOrder" TargetType="{x:Type Button}" BasedOn="{StaticResource DropShadow}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="Padding" Value="1,1,1,1"/>
            <Setter Property="Content" Value="{Binding}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="UnderlineTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Нажмите для установки текущей даты"/>
                    <!--<Setter Property="Foreground" Value="Red"/>-->
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="ListViewHeaderTemplate">
            <TextBlock FontWeight="Bold" TextWrapping="Wrap" TextAlignment="Center"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <TextBlock.Text>
                    <Binding/>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <Style TargetType="{x:Type TextBox}" x:Key="ValidationTemplate">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Grid Margin="0,-2,0,-2">
                                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
                                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                            </Grid>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!--кнопки управления-->
            <RowDefinition Height="Auto"/>
            <!--параметры заказа-->
            <RowDefinition Height="*"/>
            <!--параметры изделия-->
        </Grid.RowDefinitions>
        <WrapPanel Grid.Row="0" Margin="10" Orientation="Horizontal">
            <Button Name="SaveRequestButton" Style="{StaticResource ButtonOfOrder}" Command="{Binding SaveRequest}" 
                ToolTip="Сохранить данные по заказу и изделиям в БД" Visibility="{Binding ViewMode, Converter={StaticResource BoolToVisibilityConverter}}">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-floppy-disk_save.png" Width="25" Height="25"/>
                    <Label Content="Сохранить"/>
                </StackPanel>
             </Button>
            <Separator/>
            <Button Name="PrintRequestFormButton" Style="{StaticResource ButtonOfOrder}" IsEnabled="{Binding OrderCardPrintOrderForm}" 
                    Command="{Binding PrintOrderForm}" CommandParameter="{Binding ElementName=ListProduct}">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                    <Label Content="Бланк"/>
                </StackPanel>
            </Button>
            <Button Name="PrintRequestFormForDesignerButton" Style="{StaticResource ButtonOfOrder}" IsEnabled="{Binding OrderCardPrintOrderFormForDesigner}" 
                    Command="{Binding PrintOrderFormForDesigner}">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                    <Label Content="Бланк для дизайнера"/>
                    <Image Source="\Images\downward-arrow.png" Width="15" Height="15"/>
                </StackPanel>
                <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource MultiValueConverter}">
                        <Binding ElementName="PrintRequestFormForDesignerButton"/>
                        <Binding ElementName="ListProduct"/>
                    </MultiBinding>
                </Button.CommandParameter>
                <Button.ContextMenu>
                    <ContextMenu Visibility="Hidden">
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </WrapPanel>
        <StackPanel Grid.Row="1" Margin="5">
            <Border Margin="5" BorderThickness="1" BorderBrush="DarkSlateGray">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.2*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.5*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Column="0" Grid.Row="0" Text=" Номер заказа: " VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding Path=CurrentOrder.Number}" FontWeight="Bold" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="3" Grid.Row="0" Text=" Заказчик: " VerticalAlignment="Center"/>
                    <ComboBox  Grid.Column="4" Grid.Row="0" Name="ClientComboBox" VerticalAlignment="Center" IsEditable="False"
                               ItemsSource="{Binding ClientCollectionView}"
                               SelectedValue="{Binding Path=CurrentOrder.ClientID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                               SelectedValuePath="ID" DisplayMemberPath="ShortName">
                    </ComboBox>
                    <TextBlock  Grid.Column="5" Grid.Row="0" Text=" Поиск: " VerticalAlignment="Center"/>
                    <TextBox    Grid.Column="6" Grid.Row="0" Margin="0,0,5,0" Text="{Binding Path=SearchClient, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center"/>
                    <TextBlock  Grid.Column="0" Grid.Row="1" Text=" Дата приема заказа: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateDateAdmission}" MouseAction="LeftClick"/>
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <DatePicker Grid.Column="1" Grid.Row="1" Name="DateDateAdmission" SelectedDate="{Binding Path=CurrentOrder.DateAdmission, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                IsEnabled="{Binding IsNewOrder}"
                                IsTodayHighlighted="True" VerticalAlignment="Center"/>
                    <TextBlock  Grid.Column="3" Grid.Row="1" Text=" Краткое описание: " VerticalAlignment="Center"/>
                    <TextBox    Grid.Column="4" Grid.Row="1" Text="{Binding Path=CurrentOrder.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                AcceptsReturn="True" TextAlignment="Left" TextWrapping="Wrap"
                                VerticalAlignment="Center" VerticalContentAlignment="Top" HorizontalAlignment="Stretch"/>
                    <TextBlock  Grid.Column="0" Grid.Row="2" Text=" Состояние заказа: " VerticalAlignment="Center"/>
                    <TextBlock  Grid.Column="1" Grid.Row="2" Name="OrderStateTextBlock" TextWrapping="Wrap" Text="{Binding Path=CurrentOrder.State, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold" VerticalAlignment="Center"/>
                    <TextBlock  Grid.Column="3" Grid.Row="2" Text=" Дата окончания работ(план): " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateDateCompletion}" MouseAction="LeftClick"/>
                        </TextBlock.InputBindings>
                    </TextBlock>
                    <DatePicker Grid.Column="4" Grid.Row="2" Width="110" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                IsEnabled="{Binding OrderCardDateCompletion}"
                                SelectedDate="{Binding Path=CurrentOrder.DateCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTodayHighlighted="True"/>
                    <TextBlock Grid.Column="0" Grid.Row="3" Text=" Заказ внес в базу: " VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding CurrentOrder.OrderEntered.FullUserName, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="3" Grid.Row="3" Text=" Менеджер: " VerticalAlignment="Center"/>
                    <ComboBox  Grid.Column="4" Grid.Row="3" Name="ManagerComboBox" VerticalAlignment="Center" IsEditable="False"
                               ItemsSource="{Binding ManagerList}" 
                               SelectedValue="{Binding Path=CurrentOrder.ManagerID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
                               SelectedValuePath="ID" DisplayMemberPath="FullUserName">
                    </ComboBox>
                </Grid>
            </Border>
        </StackPanel>
        <TabControl Grid.Row="2" Margin="10">
            <TabItem Header="Изделия">
                <Border BorderThickness="1" BorderBrush="DarkBlue">
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0,5*"/>
                            <ColumnDefinition Width="0,5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" Name="LabelAndButtonRow"/>
                                <RowDefinition Height="Auto" Name="ListBoxTypeOfProductsRow"/>
                                <RowDefinition Height="*" Name="ListViewProductsRow"/>
                                <RowDefinition Height="Auto" Name="TotalProductsRow"/>
                                <RowDefinition Height="180" Name="DateRow"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="Изделия" FontWeight="Bold" VerticalAlignment="Center"/>
                                <Button Name="NewProductListButton" Background="Transparent" BorderBrush="Transparent" 
                                        Command="{Binding ShowHideFrameworkElement}" CommandParameter="{Binding ElementName=NewProductGrid}"
                                        Style="{StaticResource ButtonOfOrder}" 
                                        Visibility="{Binding ElementName=NewProductGrid, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Margin="10,0,0,0" ToolTip="Добавить изделие (показать список)">
                                    <Image Source="/Images/free-icon-add-button.png" Width="20" Height="20"/>
                                </Button>
                                <Button Background="Transparent" BorderBrush="Transparent" 
                                        Visibility="{Binding ElementName=NewProductGrid, Path=Visibility}"
                                        Style="{StaticResource ButtonOfOrder}" Command="{Binding ShowHideFrameworkElement}" CommandParameter="{Binding ElementName=NewProductGrid}"
                                        Margin="10,0,0,0" ToolTip="Свернуть список изделий">
                                    <Image Source="/Images/free-icon-minus-button.png" Width="20" Height="20"/>
                                </Button>
                                <Button Background="Transparent" BorderBrush="Transparent" 
                                        Style="{StaticResource ButtonOfOrder}" Command="{Binding DeleteProduct}" CommandParameter="{Binding ElementName=ListProduct, Path=SelectedItem}"
                                        Margin="0,0,0,0" ToolTip="Отметить изделие для удаления">
                                    <Image Source="/Images/free-icon-bin-Recycler.png" Width="20" Height="20"/>
                                </Button>
                            </StackPanel>
                            <Grid Grid.Row="1" Name="NewProductGrid" Margin="5,0,5,0" Visibility="Collapsed">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,5" HorizontalAlignment="Center">
                                    <TextBlock Text="Поиск по наименованию изделия: "/>
                                    <TextBox Text="{Binding Path=SearchTypeOfProduct, UpdateSourceTrigger=PropertyChanged}" Width="300"
                                             ToolTip="Введите фрагмент наименования изделия"/>
                                </StackPanel>
                                <ListBox Grid.Row="1" Name="NewProductListBox" IsSynchronizedWithCurrentItem="true"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"                                     
                                     ItemsSource="{Binding ProductTypeCollectionView, Mode=OneTime}"
                                     DisplayMemberPath="Name">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <i:InvokeCommandAction Command="{Binding SelectNewProduct}" CommandParameter="{Binding ElementName=NewProductListBox, Path=SelectedItem}"/>
                                            <i:InvokeCommandAction Command="{Binding ShowHideFrameworkElement}" CommandParameter="{Binding ElementName=NewProductGrid}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <ListBox.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Margin" Value="0,0,0,5"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                <Expander Name="GroupProductExpander" BorderBrush="AntiqueWhite" BorderThickness="0,0,0,1"
                                                                          IsHitTestVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}" 
                                                                          IsExpanded="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}">
                                                                    <Expander.Header>
                                                                        <DockPanel>
                                                                            <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="300"/>
                                                                        </DockPanel>
                                                                    </Expander.Header>
                                                                    <Expander.Content>
                                                                        <ItemsPresenter/>
                                                                    </Expander.Content>
                                                                </Expander>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GroupStyle.ContainerStyle>
                                        </GroupStyle>
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </Grid>
                            <ListView Grid.Row="2" Name="ListProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True"
                                      ItemsSource="{Binding CurrentOrder.Products, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto"
                                      PreviewKeyDown="ListViewUpAndDown_PreviewKeyDown">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ProductBlueBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Blue"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ProductRedBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ProductGreenBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn x:Name="column1" Header=" Наименование " Width="250"
                                                            DisplayMemberBinding="{Binding Path=ProductType.Name}"
                                                            HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                            <GridViewColumn x:Name="column2" Header=" Кол-во " Width="80" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox HorizontalContentAlignment="Right" Width="70"
                                                                 Text="{Binding Path=Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" 
                                                                 Validation.Error="TextBoxError"
                                                                 GotFocus="QuantityTextBox_GotFocus">
                                                            <TextBox.IsEnabled>
                                                                <MultiBinding Converter="{StaticResource IsCanEditAfterSendToProdToBoolConverter}">
                                                                    <Binding Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                    <Binding RelativeSource="{RelativeSource AncestorType=local:RequestWindow}" Path="DataContext.OrderCardProductQuantityAndCost"/>
                                                                </MultiBinding>
                                                            </TextBox.IsEnabled>
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn x:Name="column3" Header=" Стоимость " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                            DisplayMemberBinding="{Binding Path=Cost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU, StringFormat={}{0:C}}"/>
                                            <GridViewColumn Header=" Дизайнер " Width="200" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ComboBox VerticalAlignment="Center" IsEditable="False" Width="190"
                                                                  IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:RequestWindow}, Path=DataContext.OrderCardProductDesigner}"
                                                                  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=local:RequestWindow}, Path=DataContext.DesignerList}" 
                                                                  SelectedValuePath="ID" DisplayMemberPath="FullUserName"
                                                                  SelectedValue="{Binding Path=DesignerID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                  GotFocus="DesignerComboBox_GotFocus">
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header=" Состояние " Width="150" HeaderTemplate="{StaticResource ListViewHeaderTemplate}" 
                                                            DisplayMemberBinding="{Binding Path=State, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Border Grid.Row="3" Margin="5,0,5,0" BorderThickness="1" BorderBrush="DodgerBlue">
                                <Grid Margin="2,0,2,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding ElementName=column1, Path=Width}"/>
                                        <ColumnDefinition Width="{Binding ElementName=column2, Path=Width}"/>
                                        <ColumnDefinition Width="{Binding ElementName=column3, Path=Width}"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="10,0,0,0" Text="ИТОГО:" FontWeight="Bold" Grid.ColumnSpan="2"/>
                                    <TextBlock Grid.Column="1" Margin="0,0,5,0"  Text="{Binding ElementName=ListProduct,Path=Items.Count, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" FontWeight="Bold"/>
                                    <TextBlock Grid.Column="2" Margin="7,0,0,0"  Text="{Binding ElementName=ListProduct, Path=ItemsSource, Converter={StaticResource SumListViewDecimalConverter}, ConverterParameter=Cost, StringFormat={}{0:C}, ConverterCulture='ru-RU', UpdateSourceTrigger=PropertyChanged}" 
                                               Name="OrderTotalCosts" HorizontalAlignment="Left" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                            <StackPanel Grid.Row="4">
                                <Label Content="Даты" FontWeight="Bold" HorizontalAlignment="Center"/>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Сдать изделие (план): " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateDeliveryPlan}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="1" Grid.Row="0" Name="DateDeliveryPlan" IsEnabled="{Binding OrderCardProductDateProductionLayout}"
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateDeliveryPlan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                IsTodayHighlighted="True"/>
                                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Сдать макет: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateProductionLayout}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="1" Grid.Row="1" Name="DateProductionLayout" IsEnabled="{Binding OrderCardProductDateTransferDesigner}"
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateProductionLayout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                IsTodayHighlighted="True"/>
                                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Передано дизайнеру: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateTransferDesigner}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="1" Grid.Row="2" Name="DateTransferDesigner" 
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateTransferDesigner, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                IsTodayHighlighted="True" SourceUpdated="DatePicker_SourceUpdated"/>
                                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Передано на утверждение: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateTransferApproval}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="1" Grid.Row="3" Name="DateTransferApproval" 
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateTransferApproval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                IsTodayHighlighted="True" SourceUpdated="DatePicker_SourceUpdated"/>
                                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Утверждено: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateApproval}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="1" Grid.Row="4" Name="DateApproval" 
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateApproval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                IsTodayHighlighted="True" SourceUpdated="DatePicker_SourceUpdated"/>
                                    <TextBlock  Grid.Column="3" Grid.Row="0" Text="Передано в производство: " VerticalAlignment="Center"/>
                                    <TextBlock  Grid.Column="4" Grid.Row="0" Text="{Binding ElementName=ListProduct, Path=SelectedItem.DateTransferProduction, StringFormat=\{0:dd.MM.yyyy\}}" VerticalAlignment="Center"/>
                                    <TextBlock  Grid.Column="3" Grid.Row="1" Text="Изготовлено: " VerticalAlignment="Center"/>
                                    <TextBlock  Grid.Column="4" Grid.Row="1" Text="{Binding ElementName=ListProduct, Path=SelectedItem.DateManufacture, StringFormat=\{0:dd.MM.yyyy\}}" VerticalAlignment="Center"/>
                                    <TextBlock  Grid.Column="3" Grid.Row="2" Text="Отгружено: " Style="{StaticResource UnderlineTextBlock}" VerticalAlignment="Center">
                                        <TextBlock.InputBindings>
                                            <MouseBinding Command="{Binding TextBlockMouseLeftClick}" CommandParameter="{Binding ElementName=DateShipment}" MouseAction="LeftClick"/>
                                        </TextBlock.InputBindings>
                                    </TextBlock>
                                    <DatePicker Grid.Column="4" Grid.Row="2" Name="DateShipment" 
                                                SelectedDate="{Binding ElementName=ListProduct, Path=SelectedItem.DateShipment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                IsTodayHighlighted="True" SourceUpdated="DatePicker_SourceUpdated" 
                                                IsEnabled="{Binding ElementName=ListProduct, Path=SelectedItem.DateManufacture, Converter={StaticResource NullDateTimeToBoolConverter}}">
                                    </DatePicker>
                                </Grid>
                            </StackPanel>
                        </Grid>
                        <TabControl Grid.Column="1">
                            <TabItem Header="Описание">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" Name="LabelParametersRow"/>
                                            <RowDefinition Height="Auto" Name="ListViewParametersRow"/>
                                            <RowDefinition Height="Auto" Name="LabelNoteRow"/>
                                            <RowDefinition Height="Auto" Name="TextBoxNoteRow"/>
                                            <RowDefinition Height="Auto" Name="LabelAndButtonFilesRow"/>
                                            <RowDefinition Height="Auto" Name="ListBoxFilesRow"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Grid.Row="0" Text="Параметры" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <ListView Grid.Row="1" Name="ListParametersInProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                  ItemsSource="{Binding ElementName=ListProduct, Path=SelectedItem.ProductParameter}">
                                            <ListView.Resources>
                                                <DataTemplate x:Key="CommonTextBox">
                                                    <TextBox Name="ValueTextBox" HorizontalContentAlignment="Right" Width="90" Language="ru-ru" 
                                                             Text="{Binding Path=ParameterValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                             GotFocus="ValueTextBox_GotFocus" SourceUpdated="ValueTextBox_SourceUpdated">
                                                    </TextBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookParametersList}"
                                                              SelectedValue="{Binding Path=ParameterID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                              SelectedValuePath="ID" DisplayMemberPath="Value"                                                               
                                                              GotFocus="ValueTextBox_GotFocus" MinWidth="90" SourceUpdated="ValueTextBox_SourceUpdated">
                                                    </ComboBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="CommonTextBlock">
                                                    <TextBlock Text="" Width="90"/>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxRefbookRequestTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookList}" Name="ReferencebookList" ToolTip="Справочник по выбору"
                                                              SelectedValue="{Binding Path=ReferencebookID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                              SelectedValuePath="ID" DisplayMemberPath="Name" SelectionChanged="ComboBox_SelectionChanged"
                                                              GotFocus="ValueTextBox_GotFocus" Width="90" SourceUpdated="ValueTextBox_SourceUpdated">
                                                    </ComboBox>
                                                </DataTemplate>
                                            </ListView.Resources>
                                            <ListView.View>
                                                <GridView>
                                                    <GridView.Columns>
                                                        <GridViewColumn Header=" параметр " Width="250" DisplayMemberBinding="{Binding Path=Name}" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                                        <GridViewColumn Header="">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:ReferencebookTemplateSelector
                                                                    CommonTextBlock="{StaticResource CommonTextBlock}" 
                                                                    ComboboxRefbookRequestTextBox="{StaticResource ComboboxRefbookRequestTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" значение " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:CostTemplateSelector 
                                                                    CommonTextBox="{StaticResource CommonTextBox}" 
                                                                    ComboboxTextBox="{StaticResource ComboboxTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" ед. изи. " Width="60" DisplayMemberBinding="{Binding Path=UnitName}" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                                        <GridViewColumn Header=" обязательный " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                                        <CheckBox IsHitTestVisible="False" HorizontalAlignment="Right" IsChecked="{Binding Path=IsRequired}" IsTabStop="False"/>
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView.Columns>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                        <TextBlock Grid.Row="2" Text="Описание изделия" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBox Grid.Row="3" Margin="5" Text="{Binding ElementName=ListProduct, Path=SelectedItem.Note}" 
                                                 MinHeight="50" AcceptsReturn="True" TextWrapping="Wrap" HorizontalContentAlignment="Left" VerticalContentAlignment="Top"/>
                                        <StackPanel Grid.Row="4" Margin="5" Orientation="Horizontal" HorizontalAlignment="Center">
                                            <TextBlock Text="Файлы и иллюстрации" FontWeight="Bold" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                                            <Button Name="NewFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                    Style="{StaticResource ButtonOfOrder}" Command="{Binding NewFileToProduct}" CommandParameter="{Binding ElementName=ListProduct, Path=SelectedItem}"
                                                    Margin="10,0,0,0" ToolTip="Добавить файл">
                                                    <Image Source="/Images/free-icon-add-button.png" Width="20" Height="20"/>
                                            </Button>
                                            <Button Name="DeleteFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                    Style="{StaticResource ButtonOfOrder}" Command="{Binding DeleteFileFromProduct}"
                                                    ToolTip="Удалить файл из списка и отметить для удаления">
                                                    <Image Source="/Images/free-icon-bin-Recycler.png" Width="20" Height="20"/>
                                                <Button.CommandParameter>
                                                    <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                                        <Binding ElementName="ListProduct" Path="SelectedItem"/>
                                                        <Binding ElementName="FilesListBox" Path="SelectedItem"/>
                                                    </MultiBinding>
                                                </Button.CommandParameter>
                                            </Button>
                                            <Button Name="OpenFolderButton" Background="Transparent" BorderBrush="Transparent" 
                                                    Style="{StaticResource ButtonOfOrder}" Command="{Binding OpenFolderWithFileProduct}"
                                                    ToolTip="Открыть папку с файлами">
                                                    <Image Source="/Images/free-icon-folder_open.png" Width="20" Height="20"/>
                                            </Button>
                                        </StackPanel>
                                        <ListBox Grid.Row="5" Margin="5" Name="FilesListBox" 
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="80" 
                                                 IsSynchronizedWithCurrentItem="True"
                                                 ToolTip="Двойной щелчок - открыть файл во внешней программе"
                                                 ItemsSource="{Binding ElementName=ListProduct, Path=SelectedItem.FilesList, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseDoubleClick">
                                                    <i:InvokeCommandAction Command="{Binding OpenFileProductInShell}" CommandParameter="{Binding ElementName=FilesListBox, Path=SelectedItem}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ListBox>
                                    </Grid>
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="Стоимость и затраты по КВД">
                                <StackPanel>
                                    <ListView Name="CostOfProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                                              ItemsSource="{Binding ElementName=ListProduct, Path=SelectedItem.ProductCosts}" PreviewKeyDown="ListViewUpAndDown_PreviewKeyDown">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header=" Код " Width="Auto" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                        DisplayMemberBinding="{Binding Path=Code}"/>
                                                <GridViewColumn Header=" Вид деятельности " Width="Auto" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                        DisplayMemberBinding="{Binding Path=Name}"/>
                                                <GridViewColumn Header=" Стоимость " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Name="TypeOfActivityCostTextBox" Style="{StaticResource ValidationTemplate}"
                                                                     HorizontalContentAlignment="Right" Width="90" Language="ru-RU"                                                                     
                                                                     Validation.Error="TextBoxError"
                                                                     SourceUpdated="TypeOfActivityCostTextBox_SourceUpdated"
                                                                     GotFocus="TypeOfActivityCostTextBox_GotFocus">
                                                                <TextBox.Text>
                                                                    <Binding Path="Cost" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                                                                             NotifyOnSourceUpdated="True" 
                                                                             ValidatesOnNotifyDataErrors="True" NotifyOnValidationError="True" 
                                                                             Converter="{StaticResource CostConverter}">
                                                                        <Binding.ValidationRules>
                                                                            <local:CostValidationRule/>
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </TextBox.Text>
                                                                <TextBox.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource IsCanEditAfterSendToProdToBoolConverter}">
                                                                        <Binding Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                        <Binding RelativeSource="{RelativeSource AncestorType=local:RequestWindow}" Path="DataContext.OrderCardProductQuantityAndCost"/>
                                                                    </MultiBinding>
                                                                </TextBox.IsEnabled>
                                                            </TextBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header=" Затраты " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Name="TypeOfActivityOutlayTextBox" Style="{StaticResource ValidationTemplate}"
                                                                     HorizontalContentAlignment="Right" Width="90" Language="ru-RU"
                                                                     IsEnabled="{Binding Path=ProductCostAndCostsKVDCostsChange}"
                                                                     Validation.Error="TextBoxError"
                                                                     SourceUpdated="TypeOfActivityCostTextBox_SourceUpdated"
                                                                     GotFocus="TypeOfActivityCostTextBox_GotFocus">
                                                                <TextBox.Text>
                                                                    <Binding Path="Outlay" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                                                                     NotifyOnSourceUpdated="True" 
                                                                     ValidatesOnNotifyDataErrors="True" NotifyOnValidationError="True" 
                                                                     Converter="{StaticResource CostConverter}">
                                                                        <Binding.ValidationRules>
                                                                            <local:CostValidationRule/>
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </TextBox.Text>
                                                            </TextBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Платежи">
                
            </TabItem>
            <TabItem Header="Стоимость и затраты по КВД">
                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                    <ListView Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding TotalProductCosts}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header=" Код " DisplayMemberBinding="{Binding Path=Code}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Наименование " DisplayMemberBinding="{Binding Path=Name}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="200"/>
                                <GridViewColumn Header=" Стоимость "
                                                DisplayMemberBinding="{Binding Path=Cost, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Затраы "
                                                DisplayMemberBinding="{Binding Path=Outlay, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Маржа "
                                                DisplayMemberBinding="{Binding Path=Margin, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Border>
            </TabItem>
            <TabItem Header="ПУДы">

            </TabItem>
        </TabControl>
    </Grid>
</Window>
