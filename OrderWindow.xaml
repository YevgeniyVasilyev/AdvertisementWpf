<Window x:Class="AdvertisementWpf.OrderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:AdvertisementWpf" 
        xmlns:model="clr-namespace:AdvertisementWpf.Models" 
        xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
        Title="Заказ" WindowState="Maximized" MinHeight="700" MinWidth="1400"
        ResizeMode="CanResizeWithGrip" WindowStyle="SingleBorderWindow" Closed="Window_Closed">
    <Window.Resources>
        <ControlTemplate x:Key="SpecialTreeViewItemTemplate" TargetType="TreeViewItem">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="19" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton IsChecked="False" ClickMode="Press" Name="Expander">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="UIElement.Focusable">
                                <Setter.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>16</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                            <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                <Path.Data>
                                                    <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                </Path.Data>
                                                <Path.RenderTransform>
                                                    <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsChecked">
                                                <Setter Property="UIElement.RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF595959</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF262626</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="UIElement.IsMouseOver">
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF1BBBFA</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="UIElement.IsMouseOver">
                                                        <Condition.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Condition.Value>
                                                    </Condition>
                                                    <Condition Property="ToggleButton.IsChecked">
                                                        <Condition.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Condition.Value>
                                                    </Condition>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Shape.Stroke" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF262626</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FF595959</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True" Grid.Column="1">
                    <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
                <ItemsPresenter Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TreeViewItem.IsExpanded">
                    <Setter Property="UIElement.Visibility" TargetName="ItemsHost">
                        <Setter.Value>
                            <x:Static Member="Visibility.Collapsed" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems">
                    <Setter Property="UIElement.Visibility" TargetName="Expander">
                        <Setter.Value>
                            <x:Static Member="Visibility.Hidden" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
                <Trigger Property="TreeViewItem.IsSelected">
                    <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="TreeViewItem.IsSelected">
                            <Condition.Value>
                                <s:Boolean>True</s:Boolean>
                            </Condition.Value>
                        </Condition>
                        <Condition Property="Selector.IsSelectionActive">
                            <Condition.Value>
                                <s:Boolean>False</s:Boolean>
                            </Condition.Value>
                        </Condition>
                    </MultiTrigger.Conditions>
                    <Setter Property="Panel.Background" TargetName="Bd">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <Trigger Property="UIElement.IsEnabled">
                    <Setter Property="TextElement.Foreground">
                        <Setter.Value>
                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                    </Trigger.Value>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="TreeViewItem" x:Key="SpecialTreeViewItem">
            <Setter Property="Template" Value="{DynamicResource SpecialTreeViewItemTemplate}"/>
        </Style>
        <CollectionViewSource x:Key="ordersViewSource"/>
        <CollectionViewSource x:Key="productsViewSource"/>
        <CollectionViewSource x:Key="parametersInProductViewSource"/>
        <CollectionViewSource x:Key="usersViewSource"/>
        <CollectionViewSource x:Key="designersViewSource"/>
        <CollectionViewSource x:Key="clientsViewSource"/>
        <CollectionViewSource x:Key="productTypesViewSource">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="CategoryOfProduct.Name" />
            </CollectionViewSource.GroupDescriptions>
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="CategoryOfProduct.Name"/>
                <componentmodel:SortDescription PropertyName="Name"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="parameterInProductTypesViewSource"/>
        <CollectionViewSource x:Key="filesListViewSource"/>
        <CollectionViewSource x:Key="productCostsViewSource"/>
        <CollectionViewSource x:Key="paymentsViewSource"/>
        <CollectionViewSource x:Key="purposeOfPaymentsViewSource"/>
        <CollectionViewSource x:Key="typeOfPaymentsViewSource"/>
        <CollectionViewSource x:Key="totalProductCostsViewSource"/>
        <CollectionViewSource x:Key="accountsViewSource"/>
        <CollectionViewSource x:Key="contractorsViewSource"/>
        <CollectionViewSource x:Key="techCardsViewSource"/>
        <CollectionViewSource x:Key="operationsViewSource"/>
        <CollectionViewSource x:Key="accountsListViewSource"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:ValueConverterGroup x:Key="BoolToVisibilityConverter">
            <local:BoolNotBoolConverter/>
            <BooleanToVisibilityConverter/>
        </local:ValueConverterGroup>
        <local:CostConverter x:Key="CostConverter"/>
        <!--<local:AddBoolConverter x:Key="AddBoolConverter"/>-->
        <local:NullDateTimeToBoolConverter x:Key="NullDateTimeToBoolConverter"/>
        <local:BoolNotBoolConverter x:Key="BoolNotBoolConverter"/>
        <local:ObservableCollectionConverter x:Key="ObservableCollectionConverter"/>
        <local:VisibilitySelector x:Key="VisibilitySelector"/>
        <local:IsCanEditAfterSendToProdToBoolConverter x:Key="IsCanEditAfterSendToProdToBoolConverter"/>
        <local:ViewModel x:Key="ViewModel"/>
        <local:SumListViewDecimalConverter x:Key="SumListViewDecimalConverter"/>
        <DataTemplate x:Key="ListViewHeaderTemplate">
            <TextBlock FontWeight="Bold" TextWrapping="Wrap" TextAlignment="Center"
                       HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <TextBlock.Text>
                    <Binding/>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <Style x:Key="DropShadow" TargetType="{x:Type FrameworkElement}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="0.5" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonOfOrder" TargetType="{x:Type Button}" BasedOn="{StaticResource DropShadow}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="1,1,1,1"/>
            <Setter Property="Padding" Value="1,1,1,1"/>
            <!--<Setter Property="Height" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}"/>-->
            <Setter Property="Content" Value="{Binding}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
            <Setter Property="HorizontalGridLinesBrush" Value="Gray"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        </Style>
        <Style x:Key="ColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="Wrap"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Нажмите для сортировки"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="ValidationTemplate">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Grid Margin="0,-2,0,-2">
                                <Ellipse StrokeThickness="0" Fill="Red" Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}"/>
                                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"/>
                            </Grid>
                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder/>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=SaveOrderButton, Path=Tag}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=SaveOrderButton, Path=Tag}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=SaveOrderButton, Path=Tag}" Value="True">
                    <Setter Property="IsEnabled" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="UnderlineLabel" TargetType="Label">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <!--<Setter Property="FontWeight" Value="Bold"/>-->
                    <Setter Property="ToolTip" Value="Нажмите для установки текущей даты"/>
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Save"
                        Executed="Save_Executed"
                        CanExecute="Save_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Delete"
                        Executed="Del_Executed"
                        CanExecute="Del_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.New"
                        Executed="New_Executed"
                        CanExecute="New_CanExecute"/>
        <CommandBinding Command="ApplicationCommands.Print"
                        Executed="Print_Executed"
                        CanExecute="Print_CanExecute"/>
    </Window.CommandBindings>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!--кнопки управления-->
            <RowDefinition Height="Auto"/>
            <!--параметры заказа-->
            <RowDefinition Height="*"/>
            <!--параметры изделия-->
        </Grid.RowDefinitions>
        <WrapPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal">
            <Button Name="SaveOrderButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Save" 
                    ToolTip="Сохранить данные по заказу и изделиям в БД">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-floppy-disk_save.png" Width="25" Height="25"/>
                    <Label Content="Сохранить"/>
                </StackPanel>
            </Button>
            <Separator/>
            <Button Name="PrintOrderFormButton" Style="{StaticResource ButtonOfOrder}" 
                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:OrderWindow}, Path=DataContext.OrderCardPrintOrderForm}"
                    Click="PrintOrderFormButton_Click">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                    <Label Content="Бланк"/>
                </StackPanel>
            </Button>
            <Button Name="PrintOrderFormForDesignerButton" Style="{StaticResource ButtonOfOrder}" 
                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:OrderWindow}, Path=DataContext.OrderCardPrintOrderFormForDesigner}"
                    Click="PrintOrderFormForDesignerButton_Click">
                <StackPanel Orientation="Vertical">
                    <Image Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                    <Label Content="Бланк для дизайнера"/>
                    <Image Source="\Images\downward-arrow.png" Width="15" Height="15"/>
                </StackPanel>
                <Button.ContextMenu>
                    <ContextMenu Visibility="Hidden">
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </WrapPanel>
        <StackPanel Grid.Column="0" Grid.Row="1" Margin="5">
            <Border Margin="5" BorderThickness="1" BorderBrush="DarkBlue">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0">
                        <Label Content="Номер заказа: "/>
                        <TextBlock Text="{Binding Source={StaticResource ordersViewSource}, Path=Number}" 
                                 FontWeight="Bold" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2">
                        <Label Content="Заказчик: "/>
                        <ComboBox VerticalAlignment="Center" Width="580" 
                                  ItemsSource="{Binding Source={StaticResource clientsViewSource}}" 
                                  SelectedValue="{Binding Source={StaticResource ordersViewSource}, 
                                                Path=ClientID, Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  
                                  SelectedValuePath="ID" DisplayMemberPath="ShortName">
                        </ComboBox>
                        <Label Content=" Поиск: "/>
                        <TextBox Name="ClientSearchTextBox" Text="" Width="200" TextChanged="ClientSearchTextBox_TextChanged"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2">
                        <Label Content="Краткое описание: "/>
                        <TextBox Text="{Binding Source={StaticResource ordersViewSource}, Path=Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 AcceptsReturn="True"
                                 Width="530" TextAlignment="Left" TextWrapping="Wrap"
                                 VerticalAlignment="Center" VerticalContentAlignment="Top" HorizontalAlignment="Stretch"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="1">
                        <Label Name="DateAdmissionLabel" Content="Дата приема заказа: " Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                        <DatePicker Name="DateAdmissionDate" SelectedDate="{Binding Source={StaticResource ordersViewSource}, 
                                    Path=DateAdmission, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                    ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                    IsTodayHighlighted="True"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="2">
                        <Label Content="Состояние заказа: " VerticalAlignment="Center"/>
                        <TextBlock x:Name="OrderState" TextWrapping="Wrap" 
                                   Text="{Binding Source={StaticResource ordersViewSource}, 
                                   Path=State, Mode=TwoWay}" FontWeight="Bold" VerticalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="2">
                        <Label Name="DateCompletionLabel" Content="Дата окончания работ(план): " Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                        <DatePicker Name="DateCompletionDate"
                                    IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:OrderWindow}, Path=DataContext.OrderCardDateCompletion}"
                                    SelectedDate="{Binding Source={StaticResource ordersViewSource}, 
                                    Path=DateCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                    ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="3">
                        <Label Content="Заказ внес в базу: "/>
                        <TextBlock x:Name="OrderEntered" Text="" Margin="14,0,0,0" VerticalAlignment="Center"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="3">
                        <Label Content="Менеджер: "/>
                        <ComboBox VerticalAlignment="Center" IsEditable="False" Width="200"
                                  ItemsSource="{Binding Source={StaticResource usersViewSource}}" 
                                  SelectedValue="{Binding Source={StaticResource ordersViewSource}, 
                                                Path=ManagerID, Mode=TwoWay, 
                                                UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  
                                  SelectedValuePath="ID" DisplayMemberPath="FullUserName">
                        </ComboBox>
                    </StackPanel>
                </Grid>
            </Border>
        </StackPanel>
        <TabControl Margin="10, 5, 10, 01" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
            <TabItem Header="Изделия">
                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" Name="LabelAndButtonRow"/>
                                <RowDefinition Height="Auto" Name="ListBoxTypeOfProductsRow"/>
                                <RowDefinition Height="*" Name="ListViewProductsRow"/>
                                <RowDefinition Height="Auto" Name="TotalProductsRow"/>
                                <RowDefinition Height="180" Name="DateRow"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Label Content="Изделия" FontWeight="Bold" HorizontalContentAlignment="Stretch"/>
                                <Button Name="NewProductButton" Background="Transparent" BorderBrush="Transparent" 
                                        Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                        Visibility="{Binding ElementName=NewProductGrid, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                        Margin="10,0,0,0" ToolTip="Добавить изделие (показать список)">
                                    <Image Source="/Images/free-icon-add-button.png" Width="20" Height="20"/>
                                </Button>
                                <Button Name="HideNewProductButton" Background="Transparent" BorderBrush="Transparent" 
                                        Visibility="{Binding ElementName=NewProductGrid, Path=Visibility}"
                                        Style="{StaticResource ButtonOfOrder}" Click="HideNewProductButton_Click"
                                        Margin="10,0,0,0" ToolTip="Свернуть список изделий">
                                    <Image Source="/Images/free-icon-minus-button.png" Width="20" Height="20"/>
                                </Button>
                                <Button Name="DeleteProductButton" Background="Transparent" BorderBrush="Transparent" 
                                        Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Delete"
                                        Margin="0,0,0,0" ToolTip="Отметить изделие для удаления">
                                    <Image Source="/Images/free-icon-bin-Recycler.png" Width="20" Height="20"/>
                                </Button>
                            </StackPanel>
                            <Grid Grid.Row="1" Name="NewProductGrid" Margin="5,0,5,0" Visibility="Collapsed">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,5" HorizontalAlignment="Center">
                                    <TextBlock Text="Поиск по наименованию изделия: "/>
                                    <TextBox Name="FindNewProductTextBox" Text="" Width="300"
                                             ToolTip="Введите фрагмент наименования изделия"
                                             TextChanged="FindNewProductTextBox_TextChanged"/>
                                </StackPanel>
                                <ListBox Grid.Row="1" Name="NewProductListBox"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     IsSynchronizedWithCurrentItem="true"
                                     ItemsSource="{Binding Source={StaticResource productTypesViewSource}, Mode=OneTime}"
                                     DisplayMemberPath="Name" MouseDoubleClick="NewProductListBox_MouseDoubleClick">
                                    <ListBox.GroupStyle>
                                        <GroupStyle>
                                            <GroupStyle.ContainerStyle>
                                                <Style TargetType="{x:Type GroupItem}">
                                                    <Setter Property="Margin" Value="0,0,0,5"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                <Expander Name="GroupProductExpander" BorderBrush="AntiqueWhite" BorderThickness="0,0,0,1"
                                                                          IsHitTestVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}" 
                                                                          IsExpanded="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Path=IsSelected}">
                                                                    <Expander.Header>
                                                                        <DockPanel>
                                                                            <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="300"/>
                                                                        </DockPanel>
                                                                    </Expander.Header>
                                                                    <Expander.Content>
                                                                        <ItemsPresenter />
                                                                    </Expander.Content>
                                                                </Expander>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </GroupStyle.ContainerStyle>
                                        </GroupStyle>
                                    </ListBox.GroupStyle>
                                </ListBox>
                            </Grid>
                            <ListView Grid.Row="2" Name="ListProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True"
                                          ItemsSource="{Binding Source={StaticResource productsViewSource}, 
                                                        ValidatesOnNotifyDataErrors=True, ValidatesOnExceptions=True}"
                                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                                          PreviewKeyDown="ListViewUpAndDown_PreviewKeyDown">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ProductBlueBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Blue"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ProductRedBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=ProductGreenBorder}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                                <Setter Property="BorderThickness" Value="3"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn x:Name="column1" Header=" Наименование " Width="250"
                                                    DisplayMemberBinding="{Binding Path=ProductTypeName}"
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                            <GridViewColumn x:Name="column2" Header=" Кол-во " Width="80" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <TextBox Name="QuantityTextBox" HorizontalContentAlignment="Right" Width="70"
                                                                 Text="{Binding Path=Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                        ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                                                 GotFocus="QuantityTextBox_GotFocus">
                                                            <TextBox.IsEnabled>
                                                                <MultiBinding Converter="{StaticResource IsCanEditAfterSendToProdToBoolConverter}">
                                                                    <Binding Source="{StaticResource productsViewSource}" Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                    <Binding RelativeSource="{RelativeSource AncestorType=local:OrderWindow}" Path="DataContext.OrderCardProductQuantityAndCost"/>
                                                                </MultiBinding>
                                                            </TextBox.IsEnabled>
                                                            <!--<TextBox.IsEnabled>
                                                                <MultiBinding Converter="{StaticResource AddBoolConverter}" ConverterParameter="False">
                                                                    <Binding Source="{StaticResource productsViewSource}" Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                    <Binding RelativeSource="{RelativeSource AncestorType=local:OrderWindow}" Path="DataContext.OrderCardProductQuantityAndCost"/>
                                                                </MultiBinding>
                                                            </TextBox.IsEnabled>-->
                                                        </TextBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn x:Name="column3" Header=" Стоимость " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                                DisplayMemberBinding="{Binding Path=Cost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU, StringFormat={}{0:C}}">
                                                <!--<GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBox Name="CostTextBox" Style="{StaticResource ValidationTemplate}"
                                                                     HorizontalContentAlignment="Right" Width="90" Language="ru-ru" 
                                                                     GotFocus="QuantityTextBox_GotFocus">
                                                                <TextBox.Text>
                                                                    <Binding Path="Cost" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                                                                             NotifyOnSourceUpdated="True" ValidatesOnExceptions="True" 
                                                                             ValidatesOnNotifyDataErrors="True" Converter="{StaticResource CostConverter}">
                                                                        <Binding.ValidationRules>
                                                                            <local:CostValidationRule/>
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </TextBox.Text>
                                                            </TextBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>-->
                                            </GridViewColumn>
                                            <GridViewColumn Header=" Дизайнер " Width="200" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <ComboBox VerticalAlignment="Center" IsEditable="False" Width="190"
                                                                      IsEnabled="{Binding Source={StaticResource ViewModel}, Path=OrderCardProductDesigner}"
                                                                      ItemsSource="{Binding Source={StaticResource ViewModel}, Path=DesignerList}" 
                                                                      SelectedValuePath="ID" DisplayMemberPath="FullUserName"
                                                                       SelectedValue="{Binding Path=DesignerID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                      GotFocus="DesignerComboBox_GotFocus">
                                                        </ComboBox>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn Header=" Состояние " Width="150" HeaderTemplate="{StaticResource ListViewHeaderTemplate}" 
                                                            DisplayMemberBinding="{Binding Path=State, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Border Grid.Row="3" Margin="5,0,5,0" BorderThickness="1" BorderBrush="DodgerBlue">
                                <Grid Margin="2,0,2,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding ElementName=column1, Path=Width}"/>
                                        <ColumnDefinition Width="{Binding ElementName=column2, Path=Width}"/>
                                        <ColumnDefinition Width="{Binding ElementName=column3, Path=Width}"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="ИТОГО:" Margin="10,0,0,0" FontWeight="Bold" Grid.ColumnSpan="2"/>
                                    <TextBlock Name="TotalQuantity" Margin="0,0,5,0" Grid.Column="1" Text="" HorizontalAlignment="Right" FontWeight="Bold"/>
                                    <TextBlock Name="TotalCost" Grid.Column="2" Text="" Margin="7,0,0,0" HorizontalAlignment="Left" FontWeight="Bold"/>
                                </Grid>
                            </Border>
                            <StackPanel Grid.Row="4">
                                <Label Content="Даты" FontWeight="Bold" HorizontalAlignment="Center"/>
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Label Name="DateDeliveryPlanLabel" Content="Сдать изделие (план): " Grid.Column="0" Grid.Row="0" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Grid.Column="1" Grid.Row="0" Name="DateDeliveryPlanDate" 
                                                IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:OrderWindow}, Path=DataContext.OrderCardProductDateProductionLayout}"                                                
                                                SelectedDate="{Binding Source={StaticResource productsViewSource},                                         
                                                Path=DateDeliveryPlan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True"/>
                                    <Label Name="DateProductionLayoutLabel" Content="Сдать макет: " Grid.Column="0" Grid.Row="1" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Grid.Column="1" Grid.Row="1" Name="DateProductionLayoutDate" 
                                                IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=local:OrderWindow}, Path=DataContext.OrderCardProductDateTransferDesigner}"
                                                SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateProductionLayout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True"/>
                                    <Label Name="DateTransferDesignerLabel" Content="Передано дизайнеру: " Grid.Column="0" Grid.Row="2" 
                                                Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Grid.Column="1" Grid.Row="2" Name="DateTransferDesignerDate" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateTransferDesigner, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                                IsTodayHighlighted="True" SourceUpdated="DatePicker_SourceUpdated"/>
                                    <Label Name="DateTransferApprovalLabel" Content="Передано на утверждение: " Grid.Column="0" Grid.Row="3" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Name="DateTransferApprovalDate" Grid.Column="1" Grid.Row="3" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateTransferApproval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True" 
                                                SourceUpdated="DatePicker_SourceUpdated"/>
                                    <Label Name="DateApprovalLabel" Content="Утверждено: " Grid.Column="0" Grid.Row="4" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Name="DateApprovalDate" Grid.Column="1" Grid.Row="4" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateApproval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True" 
                                                SourceUpdated="DatePicker_SourceUpdated"/>
                                    <Label Name="DateTransferProductionLabel" Content="Передано в производство: " Grid.Column="3" Grid.Row="0" VerticalContentAlignment="Center"/>
                                    <TextBlock Grid.Column="4" Grid.Row="0" Text="{Binding Source={StaticResource productsViewSource}, Path=DateTransferProduction, StringFormat=\{0:dd.MM.yyyy\}}" VerticalAlignment="Center"/>
                                    <!--<DatePicker Name="DateTransferProductionDate" Grid.Column="4" Grid.Row="0" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateTransferProduction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True" 
                                                SourceUpdated="DatePicker_SourceUpdated" IsEnabled="False"/>-->
                                    <Label Name="DateManufactureLabel" Content="Изготовлено: " Grid.Column="3" Grid.Row="1"/>
                                    <TextBlock Grid.Column="4" Grid.Row="1" Text="{Binding Source={StaticResource productsViewSource}, Path=DateManufacture, StringFormat=\{0:dd.MM.yyyy\}}" VerticalAlignment="Center"/>
                                    <!--<DatePicker Name="DateManufactureDate" Grid.Column="4" Grid.Row="1" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateManufacture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True" 
                                                SourceUpdated="DatePicker_SourceUpdated" IsEnabled="False"/>-->
                                    <Label Name="DateShipmentLabel" Content="Отгружено: " Grid.Column="3" Grid.Row="2" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                    <DatePicker Name="DateShipmentDate" Grid.Column="4" Grid.Row="2" SelectedDate="{Binding Source={StaticResource productsViewSource}, 
                                                Path=DateShipment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                NotifyOnSourceUpdated=True,
                                                ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True" 
                                                SourceUpdated="DatePicker_SourceUpdated" IsEnabled="{Binding Source={StaticResource productsViewSource}, Path=DateManufacture, Converter={StaticResource NullDateTimeToBoolConverter}}"/>
                                    <!--<Label Content="Состояние изделия: " Grid.Column="3" Grid.Row="3"/>
                                    <TextBlock x:Name="ProductState" TextWrapping="Wrap" VerticalAlignment="Center"
                                                Text="{Binding Source={StaticResource productsViewSource}, 
                                                Path=State, Mode=TwoWay}" FontWeight="Bold" Grid.Column="4" Grid.Row="3"/>-->
                                </Grid>
                            </StackPanel>
                        </Grid>
                        <TabControl Grid.Column="1">
                            <TabItem Header="Описание">
                                <ScrollViewer VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" Name="LabelParametersRow"/>
                                            <RowDefinition Height="Auto" Name="ListViewParametersRow"/>
                                            <RowDefinition Height="Auto" Name="LabelNoteRow"/>
                                            <RowDefinition Height="Auto" Name="TextBoxNoteRow"/>
                                            <RowDefinition Height="Auto" Name="LabelAndButtonFilesRow"/>
                                            <RowDefinition Height="Auto" Name="ListBoxFilesRow"/>
                                        </Grid.RowDefinitions>
                                        <Label Grid.Row="0" Content="Параметры" FontWeight="Bold" HorizontalAlignment="Center"/>
                                        <ListView Grid.Row="1" Name="ListParametersInProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                  ItemsSource="{Binding Source={StaticResource parametersInProductViewSource}}">
                                            <ListView.Resources>
                                                <DataTemplate x:Key="CommonTextBox">
                                                    <TextBox Name="ValueTextBox" HorizontalContentAlignment="Right" Width="90" Language="ru-ru"    
                                                                 Text="{Binding Path=ParameterValue, Mode=TwoWay, 
                                                                    UpdateSourceTrigger=PropertyChanged, 
                                                                    NotifyOnSourceUpdated=True, 
                                                                    ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                                                  SourceUpdated="ValueTextBox_SourceUpdated" GotFocus="ValueTextBox_GotFocus">
                                                    </TextBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookParametersList}"
                                                          SelectedValue="{Binding Path=ParameterID, Mode=TwoWay, 
                                                                          UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                          SelectedValuePath="ID" DisplayMemberPath="Value" 
                                                          SourceUpdated="ValueTextBox_SourceUpdated" 
                                                          GotFocus="ValueTextBox_GotFocus" MinWidth="90">
                                                    </ComboBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="CommonTextBlock">
                                                    <TextBlock Text="" Width="90"/>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxRefbookRequestTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookList}" ToolTip="Справочник по выбору"
                                                          SelectedValue="{Binding Path=ReferencebookID, Mode=TwoWay, 
                                                                          UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                          SelectedValuePath="ID" DisplayMemberPath="Name" 
                                                          SourceUpdated="ValueTextBox_SourceUpdated" SelectionChanged="ComboBox_SelectionChanged"
                                                          GotFocus="ValueTextBox_GotFocus" Width="90">
                                                    </ComboBox>
                                                </DataTemplate>
                                            </ListView.Resources>
                                            <ListView.View>
                                                <GridView>
                                                    <GridView.Columns>
                                                        <GridViewColumn Header=" параметр " Width="250"
                                                                    DisplayMemberBinding="{Binding Path=Name}"
                                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                                        <GridViewColumn Header="">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:ReferencebookTemplateSelector
                                                                CommonTextBlock="{StaticResource CommonTextBlock}" 
                                                                ComboboxRefbookRequestTextBox="{StaticResource ComboboxRefbookRequestTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" значение " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:CostTemplateSelector 
                                                                CommonTextBox="{StaticResource CommonTextBox}" 
                                                                ComboboxTextBox="{StaticResource ComboboxTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" ед. изи. " Width="60"
                                                                    DisplayMemberBinding="{Binding Path=UnitName}"
                                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                                        <GridViewColumn Header=" обязательный " Width="100"
                                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                            <GridViewColumn.CellTemplate>
                                                                <DataTemplate>
                                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                                        <CheckBox IsHitTestVisible="False" HorizontalAlignment="Right"
                                                                              IsChecked="{Binding Path=IsRequired}" IsTabStop="False"/>
                                                                    </StackPanel>
                                                                </DataTemplate>
                                                            </GridViewColumn.CellTemplate>
                                                        </GridViewColumn>
                                                    </GridView.Columns>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                        <Label Grid.Row="2" Content="Описание изделия" FontWeight="Bold" HorizontalAlignment="Center"/>
                                        <TextBox Grid.Row="3" Margin="5" Text="{Binding Source={StaticResource productsViewSource}, Path=Note}" 
                                                 MinHeight="50" AcceptsReturn="True" TextWrapping="Wrap" 
                                                 HorizontalContentAlignment="Left" VerticalContentAlignment="Top"/>
                                        <StackPanel Margin="5" Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Label Content="Файлы и иллюстрации" FontWeight="Bold" HorizontalAlignment="Stretch"/>
                                            <Button Name="NewFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                                Margin="10,0,0,0" ToolTip="Добавить файл">
                                                <Image Source="/Images/free-icon-add-button.png" Width="20" Height="20"/>
                                            </Button>
                                            <Button Name="DeleteFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Delete"
                                                ToolTip="Удалить файл из списка и отметить для удаления">
                                                <Image Source="/Images/free-icon-bin-Recycler.png" Width="20" Height="20"/>
                                            </Button>
                                            <Button Name="OpenFolderButton" Background="Transparent" BorderBrush="Transparent" 
                                                Style="{StaticResource ButtonOfOrder}"
                                                ToolTip="Открыть папку с файлами" Click="OpenFolderButton_Click">
                                                <Image Source="/Images/free-icon-folder_open.png" Width="20" Height="20"/>
                                            </Button>
                                        </StackPanel>
                                        <ListBox Margin="5"  Grid.Row="5" Name="FilesListBox" 
                                                 ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="80" 
                                                 IsSynchronizedWithCurrentItem="true"
                                                 ToolTip="Двойной щелчок - открыть файл во внешней программе"
                                                 ItemsSource="{Binding Source={StaticResource filesListViewSource}, Mode=OneWay}"
                                                 MouseDoubleClick="FilesListBox_MouseDoubleClick">
                                        </ListBox>
                                    </Grid>
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="Стоимость и затраты по КВД">
                                <StackPanel>
                                    <ListView Name="CostOfProduct" Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                                              ItemsSource="{Binding Source={StaticResource productCostsViewSource}}" PreviewKeyDown="ListViewUpAndDown_PreviewKeyDown">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header=" Код " Width="Auto"
                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                        DisplayMemberBinding="{Binding Path=Code}"/>
                                                <GridViewColumn Header=" Вид деятельности " Width="Auto"
                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                        DisplayMemberBinding="{Binding Path=Name}"/>
                                                <GridViewColumn Header=" Стоимость " Width="100"
                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=SaveOrderButton, Path=Tag}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>
                                                            <TextBox Name="TypeOfActivityCostTextBox" Style="{StaticResource ValidationTemplate}"
                                                                     HorizontalContentAlignment="Right" Width="90" Language="ru-RU"
                                                                     SourceUpdated="TypeOfActivityCostTextBox_SourceUpdated"
                                                                     GotFocus="TypeOfActivityCostTextBox_GotFocus">
                                                                <TextBox.Text>
                                                                    <Binding Path="Cost" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                                                                             NotifyOnSourceUpdated="True" ValidatesOnExceptions="True" 
                                                                             ValidatesOnNotifyDataErrors="True" 
                                                                             Converter="{StaticResource CostConverter}">
                                                                        <Binding.ValidationRules>
                                                                            <local:CostValidationRule/>
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </TextBox.Text>
                                                                <TextBox.IsEnabled>
                                                                    <MultiBinding Converter="{StaticResource IsCanEditAfterSendToProdToBoolConverter}">
                                                                        <Binding Source="{StaticResource productsViewSource}" Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                        <Binding RelativeSource="{RelativeSource AncestorType=local:OrderWindow}" Path="DataContext.OrderCardProductQuantityAndCost"/>
                                                                    </MultiBinding>
                                                                    <!--<MultiBinding Converter="{StaticResource AddBoolConverter}" ConverterParameter="True">
                                                                        <Binding Source="{StaticResource productsViewSource}" Path="DateTransferProduction" Converter="{StaticResource NullDateTimeToBoolConverter}"/>
                                                                        <Binding RelativeSource="{RelativeSource AncestorType=local:OrderWindow}" Path="DataContext.IsManager"/>
                                                                    </MultiBinding>-->
                                                                </TextBox.IsEnabled>
                                                            </TextBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                                <GridViewColumn Header=" Затраты " Width="100"
                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <DataTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding ElementName=SaveOrderButton, Path=Tag}" Value="True">
                                                                    <Setter Property="IsEnabled" Value="False"/>
                                                                </DataTrigger>
                                                            </DataTemplate.Triggers>
                                                            <TextBox Name="TypeOfActivityOutlayTextBox" Style="{StaticResource ValidationTemplate}"
                                                                     HorizontalContentAlignment="Right" Width="90" Language="ru-RU"
                                                                     IsEnabled="{Binding Source={StaticResource ViewModel}, Path=ProductCostAndCostsKVDCostsChange}"
                                                                     SourceUpdated="TypeOfActivityCostTextBox_SourceUpdated"
                                                                     GotFocus="TypeOfActivityCostTextBox_GotFocus">
                                                                <TextBox.Text>
                                                                    <Binding Path="Outlay" Mode="TwoWay" UpdateSourceTrigger="LostFocus"
                                                                     NotifyOnSourceUpdated="True" ValidatesOnExceptions="True" 
                                                                     ValidatesOnNotifyDataErrors="True" 
                                                                     Converter="{StaticResource CostConverter}">
                                                                        <Binding.ValidationRules>
                                                                            <local:CostValidationRule/>
                                                                        </Binding.ValidationRules>
                                                                    </Binding>
                                                                </TextBox.Text>
                                                            </TextBox>
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </StackPanel>
                            </TabItem>
                            <!--<TabItem>
                                <TabItem.Header>
                                    <Label Content="Затраты"/>
                                </TabItem.Header>
                            </TabItem>-->
                            <TabItem Header="Тех.карта">
                                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="0.5*"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*" Name="Row_Tree"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <WrapPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="3" Orientation="Horizontal">
                                            <Button Name="LoadTechCardButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                                    ToolTip="Загрузить техкарты из БД">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="\Images\premium-icon-download.png" Width="25" Height="25"/>
                                                    <Label Content="Загрузить"/>
                                                </StackPanel>
                                            </Button>
                                            <Separator/>
                                            <Button Name="SaveTechCardButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Save"
                                                    ToolTip="Сохранить данные по техкартам в БД">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="\Images\free-icon-floppy-disk_save.png" Width="25" Height="25"/>
                                                    <Label Content="Сохранить"/>
                                                </StackPanel>
                                            </Button>
                                            <Separator/>
                                            <Border BorderThickness="0.7" BorderBrush="Black" Margin="2">
                                                <WrapPanel Orientation="Horizontal">
                                                    <Label Content=" Добавить " HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                                    <WrapPanel Orientation="Horizontal">
                                                        <Button Name="AddTechCardButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New" 
                                                            ToolTip="Техкарта">
                                                            <Image Source="\Images\free-icon-techcard.png" Width="25" Height="25"/>
                                                        </Button>
                                                        <Button Name="AddTechCardWorkButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New" 
                                                            ToolTip="Работа">
                                                            <Image Source="\Images\free-icon-techcard_work.png" Width="25" Height="25"/>
                                                        </Button>
                                                        <Button Name="AddTechCardOperationButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New" 
                                                            ToolTip="Операция">
                                                            <Image Source="\Images\free-icon-techcard_operation.png" Width="25" Height="25"/>
                                                        </Button>
                                                        <Button Name="HideNewOperationListBoxButton" Style="{StaticResource ButtonOfOrder}" Background="Transparent" BorderBrush="Transparent"
                                                                ToolTip="Свернуть список операций" HorizontalAlignment="Right" 
                                                                Click="HideNewOperationListBoxButton_Click" Visibility="{Binding ElementName=NewOperationListBox, Path=Visibility}">
                                                            <Image Source="/Images/free-icon-minus-button.png" Width="25" Height="25"/>
                                                        </Button>
                                                    </WrapPanel>
                                                </WrapPanel>
                                            </Border>
                                            <Separator/>
                                            <Button Name="SendTechCardButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                                    ToolTip="Передать техкарту в производство">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="\Images\free-icon-factory.png" Width="25" Height="25"/>
                                                    <Label Content="В производство"/>
                                                </StackPanel>
                                            </Button>
                                            <Button Name="RecallTechCardButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New" 
                                                    ToolTip="Отозвать техкарту с производства">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="\Images\free-icon-back.png" Width="25" Height="25"/>
                                                    <Label Content="Отозвать"/>
                                                </StackPanel>
                                            </Button>
                                            <Separator/>
                                            <Button Name="PrintTechCardButton" Style="{StaticResource ButtonOfOrder}" 
                                                    ToolTip="Печать техкарты или ее части" Command="ApplicationCommands.Print">
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="\Images\free-icon-printer-techcard.png" Width="25" Height="25"/>
                                                    <Label Content="Печать"/>
                                                </StackPanel>
                                                <Button.ContextMenu>
                                                    <ContextMenu Visibility="Hidden">
                                                    </ContextMenu>
                                                </Button.ContextMenu>
                                            </Button>
                                        </WrapPanel>
                                        <TreeView Grid.Column="0" Grid.Row="1" Margin="2" Name="TechCardTreeView" BorderThickness="1" BorderBrush="DodgerBlue" 
                                                  ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                  ItemsSource="{Binding Source={StaticResource techCardsViewSource}}" 
                                                  SelectedItemChanged="TechCardTreeView_SelectedItemChanged" 
                                                  KeyDown="TechCardTreeView_KeyDown">
                                            <TreeView.Resources>
                                                <HierarchicalDataTemplate DataType="{x:Type model:TechCard}" ItemsSource="{Binding Path=WorkInTechCards_}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text=" + " Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" FontWeight="ExtraBold"/>
                                                        <TextBlock Text="{Binding Path=Product.ProductTypeName}" Padding="2" MouseLeftButtonDown="TechCardTreeView_MouseLeftButtonDown" 
                                                                   ToolTip="Ctrl+левая кнопка мыши - отметить/снять отметку"/>
                                                    </StackPanel>
                                                </HierarchicalDataTemplate>
                                                <HierarchicalDataTemplate DataType="{x:Type model:WorkInTechCard}" ItemsSource="{Binding Path=OperationInWorks_}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text=" + " Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" FontWeight="ExtraBlack"/>
                                                        <StackPanel Orientation="Vertical">
                                                            <TextBlock Name="WorkInTechCardTextBlock" Text="{Binding Path=TypeOfActivity.CodeName}" Padding="2" 
                                                                       MouseLeftButtonDown="WorkInTechCardTextBlock_MouseLeftButtonDown" 
                                                                       ToolTip="Двойным щелчок мышью изменить, если нет операций.&#x0a;Ctrl+левая кнопка мыши - отметить/снять отметку"
                                                                       Visibility="{Binding ElementName=WorkInTechCardComboBox, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                            <ComboBox Padding="2" Name="WorkInTechCardComboBox" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=TypeOfActivityList}" 
                                                                      ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                      Visibility="{Binding ElementName=WorkInTechCardTextBlock, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"
                                                                      SelectedValuePath="ID" DisplayMemberPath="CodeName" 
                                                                      SelectedValue="{Binding Path=TypeOfActivityID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                      SelectionChanged="WorkTypeOfActivityComboBox_SelectionChanged" 
                                                                      GotFocus="WorkTypeOfActivityComboBox_GotFocus" 
                                                                      DropDownClosed="WorkInTechCardComboBox_DropDownClosed"/>
                                                        </StackPanel>
                                                    </StackPanel>
                                                    <HierarchicalDataTemplate.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Path=Operation.Name}" Name="OperationInWorkTextBlock" Padding="2"/>
                                                            <!--<StackPanel Orientation="Vertical">
                                                                <TextBlock Text="{Binding Path=Operation.Name}" Name="OperationInWorkTextBlock" Padding="2" MouseLeftButtonDown="OperationInWorkTextBlock_MouseLeftButtonDown" 
                                                                           Visibility="{Binding ElementName=OperationInWorkComboBox, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                                                <ComboBox Padding="2" Name="OperationInWorkComboBox" ItemsSource="{Binding Source={StaticResource ViewModel}, Path=OperationList}" 
                                                                          Visibility="{Binding ElementName=OperationInWorkTextBlock, Path=IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" 
                                                                          SelectedValuePath="ID" DisplayMemberPath="Name" 
                                                                  SelectedValue="{Binding Path=OperationID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                                  SelectionChanged="OperationInWorkComboBox_SelectionChanged" LostFocus="OperationInWorkComboBox_LostFocus" DropDownClosed="OperationInWorkComboBox_DropDownClosed"/>
                                                            </StackPanel>-->
                                                        </DataTemplate>
                                                    </HierarchicalDataTemplate.ItemTemplate>
                                                </HierarchicalDataTemplate>
                                            </TreeView.Resources>
                                            <TreeView.ItemContainerStyle>
                                                <!--BasedOn="{StaticResource SpecialTreeViewItem}"-->
                                                <Style TargetType="TreeViewItem">
                                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                </Style>
                                            </TreeView.ItemContainerStyle>
                                        </TreeView>
                                        <Grid Grid.Column="1" Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" Name="NewOperationListBoxRow"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <ListBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="5" Name="NewOperationListBox" Visibility="Collapsed"
                                                     ScrollViewer.VerticalScrollBarVisibility="Auto" IsSynchronizedWithCurrentItem="true"
                                                     ItemsSource="{Binding Source={StaticResource operationsViewSource}, Mode=OneTime}"
                                                     DisplayMemberPath="Name" MouseDoubleClick="NewOperationListBox_MouseDoubleClick"/>
                                            <StackPanel Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Orientation="Vertical" ScrollViewer.CanContentScroll="True"
                                                        Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=NoteTechCardStackPanel}">
                                                <Label Content="Описание"/>
                                                <TextBox MinHeight="70" BorderThickness="1" BorderBrush="Black" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                         Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                         AcceptsReturn="True" TextWrapping="Wrap" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" />
                                            </StackPanel>
                                            <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" Orientation="Vertical" 
                                                        Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=WorkInTechCardAttribute}">
                                                <Label Content="Название работы"/>
                                                <TextBox MinHeight="70" BorderThickness="1" BorderBrush="Black" Margin="0,0,2,0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                         Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                         AcceptsReturn="True" TextWrapping="Wrap" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" />
                                            </StackPanel>
                                            <Label Grid.Column="1" Grid.Row="2" Content="Дата планового завершения работы " Name="PlanCompletionDate" 
                                                   Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=WorkInTechCardAttribute}"
                                                   Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                            <DatePicker Grid.Column="2" Grid.Row="2" Name="DatePlanCompletionDate" 
                                                        Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=WorkInTechCardAttribute}" 
                                                        SelectedDate="{Binding ElementName=TechCardTreeView, 
                                                                        Path=SelectedItem.DatePlanCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                        ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" IsTodayHighlighted="True"/>
                                            <Label Grid.Column="1" Grid.Row="3" Content="Дата фактического завершения работы " Name="FactCompletionDate" 
                                                   Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=WorkInTechCardAttribute}"
                                                   Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                            <DatePicker Grid.Column="2" Grid.Row="3" Name="DateFactCompletionDate" 
                                                        Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=WorkInTechCardAttribute}" 
                                                        SelectedDate="{Binding ElementName=TechCardTreeView, 
                                                                        Path=SelectedItem.DateFactCompletion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                                        ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True, NotifyOnSourceUpdated=True}" IsTodayHighlighted="True" 
                                                        SourceUpdated="DateFactCompletionDate_SourceUpdated"/>
                                            <Grid Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" Margin="2"
                                                  Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=OperationInWorkAttribute}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*" Name="Col_Note"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Производственный участок  "/>
                                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Operation.ProductionArea.Name}"/>
                                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Описание" Margin="0,5,0,0" VerticalAlignment="Center"/>
                                                <TextBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,5,0,0" 
                                                         BorderThickness="1" BorderBrush="Black" AcceptsReturn="True" TextWrapping="Wrap"
                                                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                                         MaxHeight="180"
                                                         Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,5,0,0" Orientation="Horizontal" HorizontalAlignment="Left">
                                                    <Label Content="Файлы и иллюстрации"/>
                                                    <Button Name="NewOperationFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                                Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                                                Margin="5,0,0,0" ToolTip="Добавить файл">
                                                        <Image Source="/Images/free-icon-add-button.png" Width="20" Height="20"/>
                                                    </Button>
                                                    <Button Name="DeleteOperationInWorkFileButton" Background="Transparent" BorderBrush="Transparent" 
                                                                Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Delete"
                                                                ToolTip="Удалить файл из списка и отметить для удаления">
                                                        <Image Source="/Images/free-icon-bin-Recycler.png" Width="20" Height="20"/>
                                                    </Button>
                                                    <!--<Button Name="OpenOperationFolderButton" Background="Transparent" BorderBrush="Transparent" 
                                                        Style="{StaticResource ButtonOfOrder}"
                                                        ToolTip="Открыть папку с файлами" Click="OpenFolderButton_Click">
                                                        <Image Source="/Images/free-icon-folder_open.png" Width="20" Height="20"/>
                                                        </Button>-->
                                                </StackPanel>
                                                <ListBox Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" Name="OperationInWorkFilesListBox" BorderThickness="1" BorderBrush="Black"
                                                         ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                         IsSynchronizedWithCurrentItem="true" 
                                                         ToolTip="Двойной щелчок - открыть файл во внешней программе"
                                                         VerticalAlignment="Bottom" Height="90"
                                                         ItemsSource="{Binding ElementName=TechCardTreeView, Path=SelectedItem.FilesList, Mode=OneWay}"
                                                         MouseDoubleClick="OperationInWorkFilesListBox_MouseDoubleClick">
                                                </ListBox>
                                            </Grid>
                                            <!--<StackPanel Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" Margin="2" Orientation="Vertical" ScrollViewer.CanContentScroll="True"
                                                        Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=OperationInWorkAttribute}">
                                                <Grid ScrollViewer.CanContentScroll="True">
                                                </Grid>
                                                -->
                                            <!--<StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Производственный участок  "/>
                                                    <TextBlock Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Operation.ProductionArea.Name}"/>
                                                </StackPanel>-->
                                            <!--<Label Content="Описание"/>
                                                <TextBox MinHeight="70" BorderThickness="1" BorderBrush="Black" AcceptsReturn="True" TextWrapping="Wrap"
                                                         ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                         Text="{Binding ElementName=TechCardTreeView, Path=SelectedItem.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                                            <!--
                                            </StackPanel>-->
                                        </Grid>
                                        <ListView Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="3" Name="ListOperationInWorkParameters" Margin="2" Padding="1" IsSynchronizedWithCurrentItem="True" 
                                                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"                                                  
                                                  Visibility="{Binding ElementName=TechCardTreeView, Path=SelectedItem, Converter={StaticResource VisibilitySelector}, ConverterParameter=OperationInWorkAttribute}"
                                                  ItemsSource="{Binding ElementName=TechCardTreeView, Path=SelectedItem.OperationInWorkParameters}">
                                            <ListView.Resources>
                                                <DataTemplate x:Key="CommonTextBox">
                                                    <TextBox Name="ValueTextBox" HorizontalContentAlignment="Right" Width="90" Language="ru-ru"    
                                                             Text="{Binding Path=ParameterValue, Mode=TwoWay, 
                                                                    UpdateSourceTrigger=PropertyChanged, 
                                                                    NotifyOnSourceUpdated=True, 
                                                                    ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                                             SourceUpdated="OperationParameterTextBox_SourceUpdated" 
                                                             GotFocus="OperationParameterTextBox_GotFocus">
                                                    </TextBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookParametersList}"
                                                          SelectedValue="{Binding Path=ParameterID, Mode=TwoWay, 
                                                                          UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                          SelectedValuePath="ID" DisplayMemberPath="Value" 
                                                          SourceUpdated="OperationParameterTextBox_SourceUpdated"
                                                          SelectionChanged="OperationParameterValueComboBox_SelectionChanged"
                                                          GotFocus="OperationParameterTextBox_GotFocus" MinWidth="90">
                                                    </ComboBox>
                                                </DataTemplate>
                                                <DataTemplate x:Key="CommonTextBlock">
                                                    <TextBlock Text="" Width="90"/>
                                                </DataTemplate>
                                                <DataTemplate x:Key="ComboboxRefbookRequestTextBox">
                                                    <ComboBox ItemsSource="{Binding Path=ReferencebookList}" ToolTip="Справочник по выбору"
                                                          SelectedValue="{Binding Path=ReferencebookID, Mode=TwoWay, 
                                                                          UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                                          SelectedValuePath="ID" DisplayMemberPath="Name" 
                                                          SourceUpdated="OperationParameterTextBox_SourceUpdated" 
                                                          SelectionChanged="OperationParameterComboBox_SelectionChanged"
                                                          GotFocus="OperationParameterTextBox_GotFocus" Width="90">
                                                    </ComboBox>
                                                </DataTemplate>
                                            </ListView.Resources>
                                            <ListView.View>
                                                <GridView>
                                                    <GridView.Columns>
                                                        <GridViewColumn Header=" параметр " Width="250" DisplayMemberBinding="{Binding Path=Name}"
                                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                                        <GridViewColumn Header="">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:ReferencebookTemplateSelector
                                                                CommonTextBlock="{StaticResource CommonTextBlock}" 
                                                                ComboboxRefbookRequestTextBox="{StaticResource ComboboxRefbookRequestTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" значение " Width="100" HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                                            <GridViewColumn.CellTemplateSelector>
                                                                <local:CostTemplateSelector 
                                                                CommonTextBox="{StaticResource CommonTextBox}" 
                                                                ComboboxTextBox="{StaticResource ComboboxTextBox}"/>
                                                            </GridViewColumn.CellTemplateSelector>
                                                        </GridViewColumn>
                                                        <GridViewColumn Header=" ед. изи. " Width="60" 
                                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}"
                                                                        DisplayMemberBinding="{Binding Path=UnitName}"/>
                                                    </GridView.Columns>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                    </Grid>
                                </Border>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Платежи">
                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <!--список платежей-->
                            <ColumnDefinition Width="Auto"/>
                            <!--поля для редактирования-->
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!--кнопки управлениня платежами-->
                            <RowDefinition Height="Auto"/>
                            <!--список платежей-->
                            <RowDefinition Height="Auto"/>
                            <!--ИТОГО платежей-->
                        </Grid.RowDefinitions>
                        <WrapPanel Grid.Row="0" Orientation="Horizontal" Grid.ColumnSpan="2">
                            <!--<Button Name="LoadPaymentButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                            ToolTip="Загрузить платежи из БД">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\premium-icon-download.png" Width="25" Height="25"/>
                                    <Label Content="Загрузить"/>
                                </StackPanel>
                            </Button>
                            <Separator/>-->
                            <Button Name="SavePaymentButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Save"
                                            ToolTip="Сохранить данные по платежам в БД">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\free-icon-floppy-disk_save.png" Width="25" Height="25"/>
                                    <Label Content="Сохранить"/>
                                </StackPanel>
                            </Button>
                            <Separator/>
                            <Button Name="NewPaymentButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\premium-icon-payment.png" Width="25" Height="25"/>
                                    <Label Content="Новый платеж"/>
                                </StackPanel>
                            </Button>
                        </WrapPanel>
                        <ListView Grid.Column="0" Grid.Row="1" Name="ListPayments" Margin="5,5,329,5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                                  ItemsSource="{Binding Source={StaticResource paymentsViewSource}}" KeyDown="ListPayments_KeyDown"
                                  ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="3">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn x:Name="_paycol0" Header=" Счёт " DisplayMemberBinding="{Binding Path=Account.AccountNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="150"/>
                                    <GridViewColumn x:Name="_paycol1" Header=" Дата платежа " DisplayMemberBinding="{Binding Path=PaymentDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU, StringFormat=\{0:dd.MM.yyyy\}}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                    <GridViewColumn Header=" Сумма платежа "
                                                    DisplayMemberBinding="{Binding Path=PaymentAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                    <GridViewColumn Header=" Квитанция/П.п. " DisplayMemberBinding="{Binding Path=PaymentDocNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                    <GridViewColumn Header=" Назначение платежа " DisplayMemberBinding="{Binding Path=PurposeOfPaymentName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="200"/>
                                    <GridViewColumn Header=" Вид платежа " DisplayMemberBinding="{Binding Path=TypeOfPaymentName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Border Grid.Column="0" Grid.Row="2" Margin="5,0,329,0" BorderBrush="Black" BorderThickness="0.5" Grid.ColumnSpan="3">
                            <Grid >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=_paycol0, Path=ActualWidth}"/>
                                    <ColumnDefinition Width="{Binding ElementName=_paycol1, Path=ActualWidth}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="1" Text=" Оплачено:" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold"/>
                                <TextBlock Grid.Column="2" Margin="10,0,0,0" Name="TotalPaymentsTextBlock" Text="{Binding ElementName=ListPayments, Path=ItemsSource, 
                                           Converter={StaticResource SumListViewDecimalConverter}, ConverterParameter=PaymentAmount, StringFormat={}{0:C}, ConverterCulture='ru-RU'}" 
                                           HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"/>
                            </Grid>
                        </Border>
                        <Grid Margin="2,2,2,2" Grid.Column="2" Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Content="Платеж по счету" Grid.Column="0" Grid.Row="1"/>
                            <ComboBox Grid.Column="1" Grid.Row="1" Name="AccountsListComboBox" IsEnabled="True" Width="200"
                                      ItemsSource="{Binding Source={StaticResource accountsListViewSource}}" SelectionChanged="AccountsListComboBox_SelectionChanged"
                                      SelectedValuePath="ID" DisplayMemberPath="AccountNumber"
                                      SelectedValue="{Binding Source={StaticResource paymentsViewSource}, Path=AccountID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Name="PaymentDateLabel" Content="Дата платежа" Grid.Column="0" Grid.Row="2" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                            <DatePicker Name="DatePaymentDate" Grid.Column="1" Grid.Row="2" IsEnabled="True" 
                                        SelectedDate="{Binding ElementName=ListPayments, 
                                        Path=SelectedItem.PaymentDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                        ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}" 
                                        IsTodayHighlighted="True"/>
                            <Label Content="Сумма платежа" Grid.Column="0" Grid.Row="3"/>
                            <TextBox Grid.Column="1" Grid.Row="3" Name="PaymentAmountTextBox" IsEnabled="True" SourceUpdated="PaymentAmountTextBox_SourceUpdated"
                                     Text="{Binding ElementName=ListPayments, NotifyOnSourceUpdated=True,
                                     Path=SelectedItem.PaymentAmount, Mode=TwoWay, UpdateSourceTrigger=LostFocus, ConverterCulture=ru-RU, StringFormat={}{0:C}}"/>
                            <Label Content="Квитанция/П.п." Grid.Column="0" Grid.Row="4"/>
                            <TextBox Grid.Column="1" Grid.Row="4" Width="200" IsEnabled="True" 
                                     Text="{Binding ElementName=ListPayments, Path=SelectedItem.PaymentDocNumber, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged }"/>
                            <Label Content="Назначение платежа" Grid.Column="0" Grid.Row="5"/>
                            <ComboBox Grid.Column="1" Grid.Row="5" IsEnabled="True" Width="200"
                                      ItemsSource="{Binding Source={StaticResource purposeOfPaymentsViewSource}}"
                                      SelectedIndex="{Binding ElementName=ListPayments, Path=SelectedItem.PurposeOfPayment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="Вид платежа" Grid.Column="0" Grid.Row="6"/>
                            <ComboBox Grid.Column="1" Grid.Row="6" IsEnabled="True" Width="200"
                                      ItemsSource="{Binding Source={StaticResource typeOfPaymentsViewSource}}"
                                      SelectedIndex="{Binding ElementName=ListPayments, Path=SelectedItem.TypeOfPayment, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="Стоимость и затраты по КВД">
                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                    <ListView Margin="5" Padding="2" IsSynchronizedWithCurrentItem="True" 
                              ItemsSource="{Binding Source={StaticResource totalProductCostsViewSource}}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header=" Код " DisplayMemberBinding="{Binding Path=Code}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Наименование " DisplayMemberBinding="{Binding Path=Name}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="200"/>
                                <GridViewColumn Header=" Стоимость "
                                                DisplayMemberBinding="{Binding Path=Cost, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Затраы "
                                                DisplayMemberBinding="{Binding Path=Outlay, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                <GridViewColumn Header=" Маржа "
                                                DisplayMemberBinding="{Binding Path=Margin, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Border>
            </TabItem>
            <TabItem Header="ПУДы">
                <Border Margin="2" BorderThickness="1" BorderBrush="DarkBlue">
                    <Grid Name="PADGrid" Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0,45*"/>
                            <ColumnDefinition Width="0,55*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <!--кнопки-->
                            <RowDefinition Height="Auto"/>
                            <!--надпись СЧЕТА-->
                            <RowDefinition Height="Auto"/>
                            <!--счета-->
                            <RowDefinition Height="0,5*"/>
                            <!--надпись АКТЫ-->
                            <RowDefinition Height="Auto"/>
                            <!--акты-->
                            <RowDefinition Height="0,5*"/>
                        </Grid.RowDefinitions>
                        <WrapPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                            <Button Name="LoadPADButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                    ToolTip="Загрузить ПУДы из БД">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\premium-icon-download.png" Width="25" Height="25"/>
                                    <Label Content="Загрузить"/>
                                </StackPanel>
                            </Button>
                            <Separator/>
                            <Button Name="SavePADButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Save"
                                    ToolTip="Сохранить данные по ПУДам в БД">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\free-icon-floppy-disk_save.png" Width="25" Height="25"/>
                                    <Label Content="Сохранить"/>
                                </StackPanel>
                            </Button>
                            <Separator/>
                            <Button Name="NewAccountButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                    ToolTip="Сформировать новый счет">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\free-icon-account.png" Width="25" Height="25"/>
                                    <Label Content="Новый счет"/>
                                </StackPanel>
                            </Button>
                            <Separator/>
                            <Button Name="NewActButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.New"
                                    ToolTip="Сформировать новый акт">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="\Images\free-icon-act.png" Width="25" Height="25"/>
                                    <Label Content="Новый акт"/>
                                </StackPanel>
                            </Button>
                        </WrapPanel>
                        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Margin="2" BorderThickness="0.5" BorderBrush="Black" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                    <GradientStop Color="LightSkyBlue" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="СЧЕТА" Margin="2" FontWeight="Bold" HorizontalAlignment="Center"/>
                        </Border>
                        <Grid Grid.Row="2" Grid.Column="0" Margin="2,0,2,2">
                            <Grid.RowDefinitions>
                                <!--список счетов-->
                                <RowDefinition Height="0,5*"/>
                                <!--список детализации счета-->
                                <RowDefinition Height="0,5*"/>
                                <!--итого по счету-->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ListView Grid.Row="0" Margin="2" Name="ListAccount" IsSynchronizedWithCurrentItem="True"
                                      ItemsSource="{Binding Source={StaticResource accountsViewSource}, UpdateSourceTrigger=PropertyChanged}" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      KeyDown="ListAccount_KeyDown">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header=" Номер счета " DisplayMemberBinding="{Binding Path=AccountNumber}" Width="150"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Дата счета " DisplayMemberBinding="{Binding Path=AccountDate, ConverterCulture=ru-RU, StringFormat=\{0:dd.MM.yyyy\}}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Поставщик " 
                                                        DisplayMemberBinding="{Binding Path=ContractorName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                        HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="200"/>
                                        <GridViewColumn Header=" Основание " DisplayMemberBinding="{Binding Path=Footing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <ListView Grid.Row="1" Margin="2" Name="ListAccountDetail" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ItemsSource="{Binding ElementName=ListAccount, Path=SelectedItem.DetailsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                      KeyDown="ListAccountDetail_KeyDown">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn x:Name="a_col1" Header=" Товары (работы, услуги) " DisplayMemberBinding="{Binding Path=ProductInfoForAccount}" 
                                                    HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn x:Name="a_col2" Header=" Кол-во " DisplayMemberBinding="{Binding Path=Quantity}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="100"/>
                                        <GridViewColumn x:Name="a_col3" Header=" Ед. изм. " DisplayMemberBinding="{Binding Path=UnitName}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn x:Name="a_col4" Header=" Цена " DisplayMemberBinding="{Binding Path=PricePerUnit, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="100"/>
                                        <GridViewColumn x:Name="a_col5" Header=" Сумма " DisplayMemberBinding="{Binding Path=Cost, ConverterCulture=ru-RU, StringFormat={}{0:C}}" 
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="100"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <Border Grid.Row="2" BorderBrush="DeepSkyBlue" BorderThickness="0.5">
                                <Grid Width="{Binding ElementName=ListAccountDetail, Path=ActualWidth}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="{Binding ElementName=a_col1, Path=ActualWidth}"/>
                                        <ColumnDefinition Width="{Binding ElementName=a_col2, Path=ActualWidth}"/>
                                        <ColumnDefinition Width="{Binding ElementName=a_col3, Path=ActualWidth}"/>
                                        <ColumnDefinition Width="{Binding ElementName=a_col4, Path=ActualWidth}"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="3" Text="ИТОГО: " FontWeight="Bold" HorizontalAlignment="Right"/>
                                    <TextBlock Grid.Column="4" Margin="10,0,0,0" Text="{Binding ElementName=ListAccount, Path=SelectedItem.TotalCost, ConverterCulture=ru-RU, StringFormat={}{0:C}, UpdateSourceTrigger=PropertyChanged}" 
                                               FontWeight="Bold"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ScrollViewer Grid.Row="2" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <Grid Margin="5">
                                <!--поля для правки счета-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Номер счета: " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding ElementName=ListAccount, Path=SelectedItem.AccountNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     IsEnabled="True" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Покупатель: " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Margin="0,5,0,0" IsEnabled="True" AcceptsReturn="True" AcceptsTab="True" 
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     Text="{Binding ElementName=ListAccount, Path=SelectedItem.Order.Client.ClientInfoForAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     TextWrapping="Wrap" MaxLines="3" MinLines="3"/>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Поставщик: " VerticalAlignment="Center"/>
                                <ComboBox Grid.Column="1" Grid.Row="2" Margin="0,5,0,0" Name="ContractorNameComboBox" IsEnabled="True" SelectionChanged="ContractorNameComboBox_SelectionChanged"
                                      ItemsSource="{Binding Source={StaticResource contractorsViewSource}}" 
                                      DisplayMemberPath="NameForUI" SelectedValuePath="ID" VerticalAlignment="Center"
                                      SelectedValue="{Binding ElementName=ListAccount, Path=SelectedItem.ContractorID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBox Grid.Column="1" Grid.Row="3" IsEnabled="True" AcceptsReturn="True" AcceptsTab="True" TextWrapping="Wrap"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     MaxLines="3" MinLines="3"
                                     Text="{Binding ElementName=ListAccount, Path=SelectedItem.Contractor.ContractorInfoForAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="Основание: " VerticalAlignment="Center"/>
                                <Grid Grid.Column="1" Grid.Row="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" IsEnabled="True" VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                         Text="{Binding ElementName=ListAccount, Path=SelectedItem.Footing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                                        <Label Name="PayBeforeDateLabel" Content="Оплатить не позднее: " HorizontalContentAlignment="Right" Style="{StaticResource UnderlineLabel}" MouseLeftButtonDown="Label_MouseLeftButtonDown"/>
                                        <DatePicker Name="DatePayBeforeDate" IsTodayHighlighted="True" IsEnabled="True" 
                                                    SelectedDate="{Binding ElementName=ListAccount, Path=SelectedItem.PayBeforeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                                    ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True}"
                                                    VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,0,0,1"/>
                                    </StackPanel>
                                </Grid>
                                <TextBlock Grid.Column="0" Grid.Row="5" Text="Товары (работы, услуги): " VerticalAlignment="Center"/>
                                <Grid Grid.Column="1" Grid.Row="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Margin="0,5,5,5" IsEnabled="True" TextWrapping="Wrap" AcceptsReturn="True"  
                                             VerticalAlignment="Center"
                                             Text="{Binding ElementName=ListAccountDetail, Path=SelectedItem.ProductInfoForAccount, Mode=TwoWay, 
                                             UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated"/>
                                    <CheckBox Grid.Column="1" Name="ManualInput" Margin="1,0,0,0" Content=" ручной ввод" VerticalContentAlignment="Center" 
                                              IsChecked="{Binding ElementName=ListAccount, Path=SelectedItem.IsManual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}" 
                                              Click="ManualInput_Click"/>
                                </Grid>
                                <TextBlock Grid.Column="0" Grid.Row="6" Text="Количество: " VerticalAlignment="Center"/>
                                <StackPanel Grid.Column="1" Grid.Row="6" Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBox IsEnabled="True" Margin="0,5,0,5" VerticalAlignment="Center" HorizontalAlignment="Left"
                                         Width="40"
                                         Text="{Binding ElementName=ListAccountDetail,Path=SelectedItem.Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                         ValidatesOnExceptions=True, ValidatesOnNotifyDataErrors=True,
                                         NotifyOnSourceUpdated=True}" SourceUpdated="TextBox_SourceUpdated"/>
                                    <TextBlock Text="  Ед. изм.: " HorizontalAlignment="Right" VerticalAlignment="Center"/>
                                    <TextBox Margin="1,5,0,0" IsEnabled="True" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40"
                                         Text="{Binding ElementName=ListAccountDetail,Path=SelectedItem.UnitName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         SourceUpdated="TextBox_SourceUpdated"/>
                                </StackPanel>
                                <StackPanel Grid.Column="0" Grid.Row="7" Orientation="Vertical">
                                    <Button Margin="4" Name="PrintAccountButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Print">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Margin="5,0,0,0" Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                                            <StackPanel Orientation="Vertical" Margin="7,0,0,0">
                                                <Label Content=" Печать на дату "/>
                                                <DatePicker Name="AccountDate" SelectedDate="{x:Static System:DateTime.Now}" IsTodayHighlighted="True" IsEnabled="True" 
                                                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <CheckBox Grid.Column="1" Grid.Row="7" Content=" с подписью и печатью" Name="WithSignature" VerticalAlignment="Center"/>
                            </Grid>
                        </ScrollViewer>
                        <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="2" BorderThickness="0.5" BorderBrush="Black" CornerRadius="5">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
                                    <GradientStop Color="LightSkyBlue" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <TextBlock Text="АКТЫ" Margin="2" FontWeight="Bold" HorizontalAlignment="Center"/>
                        </Border>
                        <Grid Grid.Row="4" Grid.Column="0" Margin="2">
                            <Grid.RowDefinitions>
                                <!--список актов-->
                                <RowDefinition Height="0,5*"/>
                                <!--список детализации акта-->
                                <RowDefinition Height="0,5*"/>
                            </Grid.RowDefinitions>
                            <ListView Grid.Row="0" Name="ListAct" IsSynchronizedWithCurrentItem="True" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ItemsSource="{Binding ElementName=ListAccount, Path=SelectedItem.Acts}" KeyDown="ListAct_KeyDown">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header=" Номер акта " DisplayMemberBinding="{Binding Path=ActNumber}" Width="150"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Дата акта " DisplayMemberBinding="{Binding Path=ActDate, ConverterCulture=ru-RU, StringFormat=\{0:dd.MM.yyyy\}}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Поставщик " Width="250"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ElementName=ListAccount, Path=SelectedItem.ContractorName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                           TextWrapping="Wrap"/>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header=" Основание " DisplayMemberBinding="{Binding ElementName=ListAccount, Path=SelectedItem.Footing, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="200"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                            <ListView Grid.Row="1" Name="ListActDetail" IsSynchronizedWithCurrentItem="True" 
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      ItemsSource="{Binding ElementName=ListAct, Path=SelectedItem.DetailsList}" KeyDown="ListActDetail_KeyDown">
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header=" Наименование работ, услуг " DisplayMemberBinding="{Binding Path=ProductInfoForAccount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Кол-во " DisplayMemberBinding="{Binding Path=Quantity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Ед. изм. " DisplayMemberBinding="{Binding Path=UnitName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}"/>
                                        <GridViewColumn Header=" Цена " DisplayMemberBinding="{Binding Path=PricePerUnit, ConverterCulture=ru-RU, StringFormat={}{0:C}}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="100"/>
                                        <GridViewColumn Header=" Сумма " DisplayMemberBinding="{Binding Path=Cost, ConverterCulture=ru-RU, StringFormat={}{0:C}}"
                                                HeaderTemplate="{StaticResource ListViewHeaderTemplate}" Width="100"/>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Grid>
                        <ScrollViewer Grid.Row="4" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                            <Grid  Margin="5">
                                <!--поля для правки деталей акта-->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Text="Номер акта " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding ElementName=ListAct, Path=SelectedItem.ActNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                     IsEnabled="True" VerticalAlignment="Center"/>
                                <TextBlock Grid.Column="0" Grid.Row="1" Text="Исполнитель: " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="1" Margin="0,5,0,0" Name="MeasureMaxWidth" IsEnabled="True" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     MaxLines="3" MinLines="3"
                                     Text="{Binding Source={StaticResource accountsViewSource}, Path=Contractor.ContractorInfoForAct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="2" Text="Заказчик: " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="2" Margin="0,5,0,0" IsEnabled="True" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     MaxLines="3" MinLines="3"
                                     Text="{Binding Source={StaticResource accountsViewSource}, Path=Order.Client.ClientInfoForAct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="4" Text="Статус (УПД): " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="4" Margin="0,5,0,0" Width="20" HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Text="{Binding ElementName=ListAct, Path=SelectedItem.UPDState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="5" Text="Грузоотправитель (УПД): " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="5" Margin="0,5,0,0" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     MaxLines="3" MinLines="3"
                                     Text="{Binding Source={StaticResource accountsViewSource}, Path=Contractor.ShipperInfoForSFUPD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="6" Text="Грузополучатель (СФ, УПД): " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="6" Margin="0,5,0,0" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     IsEnabled="{Binding Converter={StaticResource BoolNotBoolConverter}, Source={StaticResource accountsViewSource}, Path=Order.Client.ConsigneeIsSame}"
                                     Text="{Binding Source={StaticResource accountsViewSource}, Path=Order.Client.ConsigneeForSFUPD, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Grid.Column="0" Grid.Row="7" Text="Грузополучатель (ТН): " VerticalAlignment="Center"/>
                                <TextBox Grid.Column="1" Grid.Row="7" Margin="0,5,0,0" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     MaxLines="3" MinLines="3"
                                     IsEnabled="{Binding Converter={StaticResource BoolNotBoolConverter}, Source={StaticResource accountsViewSource}, Path=Order.Client.ConsigneeIsSame}"
                                     Text="{Binding Source={StaticResource accountsViewSource}, Path=Order.Client.ConsigneeForTN, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <StackPanel Grid.Column="0" Grid.Row="8" Orientation="Vertical">
                                    <Button Margin="4" Name="PrintActButton" Style="{StaticResource ButtonOfOrder}" Command="ApplicationCommands.Print">
                                        <StackPanel Orientation="Horizontal">
                                            <Image Margin="5,0,0,0" Source="\Images\free-icon-printer.png" Width="25" Height="25"/>
                                            <StackPanel Orientation="Vertical" Margin="7,0,0,0">
                                                <Label Content=" Печать на дату "/>
                                                <DatePicker Name="ActDate" SelectedDate="{x:Static System:DateTime.Now}" IsTodayHighlighted="True" IsEnabled="True" 
                                                        VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                                <StackPanel Grid.Column="1" Grid.Row="8" Orientation="Horizontal" Margin="3,0,0,0">
                                    <RadioButton GroupName="ActTemplate" Name="TemplateAct" IsChecked="True" Content=" Акт" VerticalContentAlignment="Center"/>
                                    <RadioButton GroupName="ActTemplate" Name="TemplateSFTN" Margin="3,0,0,0" Content=" СФ и ТН" VerticalContentAlignment="Center" />
                                    <RadioButton GroupName="ActTemplate" Name="TemplateUPD" Margin="3,0,0,0" Content=" УПД" VerticalContentAlignment="Center" />
                                </StackPanel>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </Border>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
